name: assignment3
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set workflow start time and submitters
        run: |
          echo "DATE=$(date -Iminutes)" >> $GITHUB_ENV
          echo "SUBMITTER=Spencer Miller" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and export
        uses: docker/build-push-action@v3
        with:
          context: ./meals-service
          file: ./meals-service/Dockerfile
          tags: meals-service:latest
          outputs: type=docker,dest=/tmp/image.tar
      - name: Log successful build
        if: success()
        run: echo "BUILD_RESULT=image successfully built" >> $GITHUB_ENV
      - name: Log failed build
        if: failure()
        run: echo "BUILD_RESULT=image not able to be built" >> $GITHUB_ENV
      - name: Log to file
        run: echo -e "${{ env.DATE }}\n${{ env.SUBMITTER }}\n${{ env.BUILD_RESULT }}" >> log.txt
      - name: Upload log artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: log.txt
          path: ./log.txt
      - name: Upload docker image artifact
        uses: actions/upload-artifact@v3
        with:
          name: meals-service
          path: /tmp/image.tar
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
      - name: Load Docker images from previous workflows
        run: docker load --input meals-service/image.tar
      - name: Check meals-service image is loaded
        run: docker image ls
      - name: Run image in container
        run: docker run -p 8000:8000 meals-service &
      - name: Check container is running
        run: docker ps
      - name: Log successful container start
        if: success()
        run: echo "START_RESULT=Container up and running" >> $GITHUB_ENV
      - name: Log failed container start
        if: failure()
        run: echo "START_RESULT=Container failed to run" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v3
      - name: Print current directory
        run: ls
      - name: Setup Python
        uses: actions/setup-python@v4
      - name: Install dependencies
        run: |
          cd tests
          pip install -r requirements.txt
      - name: Test with Pytest
        run: |
          cd tests
          pytest -v assn3_tests.py > assn3_test_results.txt
      - name: Log successful test
        if: success()
        run: echo "TEST_RESULT=tests succeeded" >> $GITHUB_ENV
      - name: Log failed test
        if: failure()
        run: echo "TEST_RESULT=tests failed" >> $GITHUB_ENV
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: GH_test_results
          path: tests/assn3_test_results.txt
      - name: Log to file
        run: echo -e "${{ env.START_RESULT }}\n${{ env.TEST_RESULT }}" >> log.txt
      - name: Upload log file
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: log.txt
          path: log.txt
  query:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Read query.txt file
        run: cat query.txt